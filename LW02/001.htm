<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Лабораторная работа №2</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.01
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && d.getElementById) x=d.getElementById(n); return x;
}

function MM_nbGroup(event, grpName) { //v6.0
  var i,img,nbArr,args=MM_nbGroup.arguments;
  if (event == "init" && args.length > 2) {
    if ((img = MM_findObj(args[2])) != null && !img.MM_init) {
      img.MM_init = true; img.MM_up = args[3]; img.MM_dn = img.src;
      if ((nbArr = document[grpName]) == null) nbArr = document[grpName] = new Array();
      nbArr[nbArr.length] = img;
      for (i=4; i < args.length-1; i+=2) if ((img = MM_findObj(args[i])) != null) {
        if (!img.MM_up) img.MM_up = img.src;
        img.src = img.MM_dn = args[i+1];
        nbArr[nbArr.length] = img;
    } }
  } else if (event == "over") {
    document.MM_nbOver = nbArr = new Array();
    for (i=1; i < args.length-1; i+=3) if ((img = MM_findObj(args[i])) != null) {
      if (!img.MM_up) img.MM_up = img.src;
      img.src = (img.MM_dn && args[i+2]) ? args[i+2] : ((args[i+1])? args[i+1] : img.MM_up);
      nbArr[nbArr.length] = img;
    }
  } else if (event == "out" ) {
    for (i=0; i < document.MM_nbOver.length; i++) {
      img = document.MM_nbOver[i]; img.src = (img.MM_dn) ? img.MM_dn : img.MM_up; }
  } else if (event == "down") {
    nbArr = document[grpName];
    if (nbArr)
      for (i=0; i < nbArr.length; i++) { img=nbArr[i]; img.src = img.MM_up; img.MM_dn = 0; }
    document[grpName] = nbArr = new Array();
    for (i=2; i < args.length-1; i+=2) if ((img = MM_findObj(args[i])) != null) {
      if (!img.MM_up) img.MM_up = img.src;
      img.src = img.MM_dn = (args[i+1])? args[i+1] : img.MM_up;
      nbArr[nbArr.length] = img;
  } }
}
//-->
</script>
</head>

<body bgcolor="#FFCC99">
<blockquote> 
  <table border="0" cellpadding="0" cellspacing="0">
    <tr> 
      <td><a href="main02.htm" target="_self" onClick="MM_nbGroup('down','group1','Menu','',1)" onMouseOver="MM_nbGroup('over','Menu','','',1)" onMouseOut="MM_nbGroup('out')"><img src="img/Menu.gif" alt="" name="Menu" width="73" height="22" border="0" onload=""></a></td>
      <td><a href="002.htm" target="_self" onClick="MM_nbGroup('down','group1','For','',1)" onMouseOver="MM_nbGroup('over','For','','',1)" onMouseOut="MM_nbGroup('out')"><img src="img/For.gif" alt="" name="For" width="73" height="22" border="0" onload=""></a></td>
    </tr>
  </table>
  
</blockquote>
<p align="center"><font size="5"><em><strong>Методические указания к лабораторной 
  работе № 2</strong></em></font></p>
<blockquote> 
  <blockquote>
    <p><em><font size="4"><strong><br>
      Методика разработки экспертных систем на основе оболочки EXSYS RuleBook</strong></font></em></p>
  </blockquote>
</blockquote>
<p align="justify"><br>
  Целью работы является исследование процесса построения экспертных систем в заданной 
  предметной области с помощью оболочки фирмы EXSYS Inc.<br>
  Общие сведения о системе RuleBook<br>
  При старте системы RuleBook выполняются следующие действия: <br>
  1) вводятся заключения (choices), т. е. цели, по которым система будет принимать 
  решение;<br>
  2) вводятся факторы (factors), которые будут использоваться, чтобы сделать выбор, 
  они могут быть числовыми или текстовыми; текстовые факторы представляются в 
  виде списка вариантов;<br>
  3) вводится диаграмма в виде дерева (trees), которая описывает, как принять 
  решение по выбору заключения, основанное на различных комбинациях факторов;<br>
  4) система проверяется с помощью эксперта (expert) RuleBook. RuleBook будет 
  автоматически проверять систему на наличие логических ошибок и поможет устранить 
  их.<br>
  В RuleBook логика принятия решений представлена в виде дерева решений (trees). 
  Каждая ветвь дерева имеет две части: часть «ЕСЛИ» и часть «ТО». Узлы «ЕСЛИ» 
  — условные выражения. Узлы «ТО» —присваивание величины фактору или заключению. 
  Все «ЕСЛИ»-узлы будут иметь, по крайней мере, две возможные величины. Все «ТО»-узлы 
  будут иметь только единственную величину.<br>
  Каждая ветвь в дереве преобразуется в правило (rule). В RuleBook используются 
  правила продукций вида «ЕСЛИ ... ТО».<br>
  Пример<br>
  4.1. Приведем пример правил в RuleBook:</p>
<blockquote>
  <p> <font face="Courier New">rule 1:<br>
    IF<br>
    Factor 1: Value 1 <br>
    and Factor 2: Value 1<br>
    THEN<br>
    Choice 1<br>
    Rule 2: <br>
    IF<br>
    Factor 1: Value 1<br>
    And Factor 2: Value 2 <br>
    THEN<br>
    Choice 2<br>
    Rule 3: <br>
    IF<br>
    Factor 1: Value 2<br>
    and Factor 3: Value 1<br>
    THEN<br>
    Choie 3<br>
    Rule 4:<br>
    IF<br>
    Factor 1: Value 2<br>
    and Factor 3: Value 2<br>
    THEN<br>
    Choice 4<br>
    Rule 5: <br>
    IF<br>
    Factor 1: Value 3<br>
    ТНЕN<br>
    Choice 5 </font></p>
</blockquote>
<p>&nbsp;</p>
<blockquote> 
  <blockquote>
    <p><font size="4"><strong><em>Эксперт</em></strong></font></p>
  </blockquote>
</blockquote>
<p align="justify"><br>
  Эксперт RuleBook проверяет систему на наличие логических ошибок. Чтобы проверить 
  систему, надо щелкнуть кнопкой Проверка системы (Check System). Если эта кнопка 
  имеет красную окантовку, правила не редактировались с момента последней проверки.<br>
  RuleBook сначала делает быстрый контроль экспертной системы. Если ошибки не 
  найдены при быстром контроле, RuleBook ( спрашивает, продолжать ли полную проверку. 
  Полный контроль большой системы может занимать много времени, поэтому обычно, 
  если ошибки найдены при быстром контроле, лучше исправить их перед выполнением 
  полного контроля. Полный систематический контроль (Full systematic test) проверит 
  все возможные комбинации входных данных.<br>
  RuleBook вычисляет максимальное количество запусков экспертной системы, которое 
  потребуется. Поскольку некоторые качества и числовые переменные зависят от других, 
  фактическое количество проверок часто меньше максимального. Если число проверок 
  для полного систематического контроля очень велико, RuleBook предложит вам вариант 
  случайных испытаний (Random test). Случайное испытание не такое полное, как 
  систематическое, однако и оно позволяет довольно полно проверить большую систему. 
  Для больших систем полное систематическое испытание может занимать много времени. 
  Даже если испытание занимает длительное время, оно должно быть выполнено, по 
  крайней мере, один раз, чтобы исключить ошибки.<br>
  Любые найденные ошибки будут показаны в окне Эксперта. Чтобы получить более 
  детальные сведения относительно ошибки, щелкните кнопкой Детали (Details).<br>
  После проверки системы генерируется файл отчета. Этот файл носит название (системное 
  имя).err. Его можно просмотреть и распечатать. Это можно сделать в RuleBook, 
  щелкнув кнопкой Отчет (Report).<br>
  Файл отчета содержит информацию относительно найденных ошибок, качеств, переменных, 
  заключений и использования правил. Эта статистика может быть исследована относительно 
  контекста системы, чтобы определить, имеют ли выданные сообщения смысл.<br>
</p>
<blockquote>
  <p>Сообщения об ошибках:<br>
    а) Incomplete Branches - незавершенные ветви;<br>
    б)Text Factors Not Used - неиспользованные текстовые факторы;<br>
    в)Variables Not Used - неиспользованные переменные;<br>
    г)Text Factors Not Always Derived - текстовые факторы не всегда определены;<br>
    д)Variables Not Always Derived - переменные не всегда определены;<br>
    е) Multiple Factors Useмногократное использование фактора;<br>
    ж)Input Produces No Output - вход не производит никакого выхода;<br>
    з) Variable Assigned a Value Out of Range - переменная вне диапазона;<br>
    и) Too Many Values for Text Factor - слишком большое количествовеличин;<br>
    к) Loop Error - зацикливание.</p>
</blockquote>
<p>&nbsp;</p>
<blockquote> 
  <blockquote>
    <p><strong><em><font size="4">Степень уверенности</font></em></strong></p>
  </blockquote>
</blockquote>
<p align="justify"><br>
  Разработанная система должна описывать процесс, приводящий к решению. В некоторых 
  случаях каждая возможная комбинация данных позволяет сделать определенное заключение. 
  Однако большинству экспертных систем приходится иметь дело с ситуациями, где 
  набор предпосылок имеет определенное решение, но при этом предполагает наличие 
  других решений.<br>
  Назначение коэффициентов уверенности различным решениям позволяет системе выбрать 
  несколько возможных заключений и распределить их в порядке возрастания уверенности. 
  Эти коэффициенты уверенности определяются путем сложения коэффициентов уверенности 
  решений всех правил, входящих в цепочку рассуждений, приводящих к заключению. 
  Выводится лишь определенное количество заключений с наивысшим коэффициентом 
  уверенности.</p>
<p align="justify"> RuleBook поддерживает три способа назначения степени уверенности:</p>
<p align="justify"> <em>а) ДА/НЕТ. Не используются сомнительные данные. Все альтернативы 
  могут положительно отбираться или отклоняться. Величина выбора устанавливается 
  в соответствии с первым правилом, которое назначает величина ДА (1) или НЕТ 
  (0);<br>
  б) если 0, то точно—НЕТ, если 10, то точно—ДА. Величины от 1 до 9 усреднены, 
  а величины 0 и 10 —пороговые;<br>
  в) увеличение на 1/уменьшение на I.</em></p>
<p align="justify"> При выборе способа назначения степени уверенности для системы 
  используют, по возможности, самый простой способ.<br>
  Способ ДА/НЕТ используется, когда:<br>
  <em>– система не требует факторов уверенности;<br>
  – заключения либо выбираются, либо отклоняются;<br>
  – ранжирование отбираемых заключений не требуется. </em><br>
  Способ 0—10 используется, если:<br>
  <em>– по дереву нельзя сделать заключение с абсолютной уверенностью;<br>
  – заключения будут выбираться в условиях независимости факторов;<br>
  – некоторые правила должны допускать возможность назначать решению степень уверенности, 
  равную 0 или 10;<br>
  – большинство пользователей может легко определиться со степенью уверенности 
  того или иного решения.</em><br>
  Способ «Увеличение на 1/Уменьшение на 1» используется, когда:<br>
  <em>— система должна различать заключения, которые являются подобными;<br>
  — предполагается, что в большинстве пунктов в решении очень много независимых 
  факторов.</em></p>
<p align="justify">&nbsp;</p>
<blockquote> 
  <blockquote> 
    <p align="justify"><em><strong><font size="4">Работа с программой EXSYS RuleBook</font></strong></em> 
    </p>
  </blockquote>
</blockquote>
<p align="justify"><br>
  После запуска RuleBook на экране появится заставка с логотипом EXSYS Inc. Доступными 
  в этот момент являются лишь два пункта меню File и Не1р.<br>
  После ввода имени файла на экране появится окно (рис. 11), при помощи которого 
  разработчик системы создает своего рода титульный лист, называя проект (Subject), 
  над которым работает, и себя (Author).<br>
  В этом окне пользователь должен также задать способ определения уверенности:<br>
  Yes/No — если система должна дать односложный ответ на определенный вопрос;<br>
  О—10 — если система должна выбрать одно или несколько решений из набора возможных, 
  для каждого из которых можно определить степень уверенности в его точности;<br>
  Incr/Decr - если система должна дать положительное либо отрицательное заключение. 
  При движении системы к заключению она добавляет либо вычитает единицу от базового 
  значения. В результате, если базовое значение отрицательное, то и заключение 
  отрицательное, а если положительное, то и заключение положительное.<br>
  Используя кнопки Starting text и Ending text, разработчик может задать текст, 
  который система будет выдавать на экран в начале и в конце своей работы.<br>
  Введя всю вышеперечисленную информацию, разработчик получает возможность непосредственно 
  приступить к созданию базы знаний.<br>
  <img src="img/file_01_01.png" width="478" height="305"><br>
  Рис. 1. Титульный лист нового файла<br>
  <img src="img/file_01_02.png" width="480" height="217"></p>
<blockquote> 
  <blockquote> 
    <pre align="justify">  <font size="3" face="Verdana, Arial, Helvetica, sans-serif">Таблица 1                         Таблица 2</font></pre>
  </blockquote>
</blockquote>
<p align="justify"> Первым этапом создания БЗ является описание всех возможных 
  заключений, которые мог бы сделать эксперт, решая поставленную задачу. Сразу 
  же после заполнения титульного листа и нажатия клавиши ОК на экране появится 
  окно с активной вкладкой Choice для ввода этих заключений (табл. 1).<br>
  Используя перечисленные в табл. 1 кнопки, разработчик создает список заключений, 
  а затем нажав кнопку DONE переходит к следующему этапу разработки базы знаний 
  — вводу факторов. Фактор — это критерий оценки исследуемого предмета.<br>
  Ввол списка факторов осуществляется во вкладке FACTOR при помощи кнопок, описанных 
  в табл. 2.<br>
  Вкладка FACTOR разделена на две части:<br>
  1) ТЕХТ — для введения текстовых (качественных) факторов;<br>
  2) NUMERIC — для введения числовых факторов.<br>
  После нажатия кнопки NEW в части ТЕХТ на экране появится окно Add/Edit Qualifier. 
  Поле Qualifier предназначено для введения наименований факторов (например, 
  «цвет автомобиля»), поле Value— для введения их характеристик («белый», «красный» 
  и т. д.).<br>
  После нажатия кнопки NEW в части NUMERIC на экране появится окно с с таким же 
  названием Add/Edit Qualifier .В поле Prompt разработчик задает название фактора, 
  например, «мощность двигателя», в поле Lower Limit и Upper Limit— соответственно 
  нижний и верхний пределы фактора, в поле Ranges—допустимый диапазон, а в поле 
  Range Break Pts.— точки деления допустимого диапазона, например, допустимый 
  диа-пазон мощностей двигателя можно разделить на три части: маломощные, среднемощные 
  и высокомощные.<br>
  Следующим этапом создания базы знаний является построение дерева правил на 
  основе введенных ранее факторов, их значений и заключений. Используя построенное 
  разработчиком дерево. RuleBook автоматически генерирует все возможные правила.<br>
  Построение дерева правил начинается из вкладки TREES при помощи кнопок, описанных 
  в табл.3.<br>
  <img src="img/file_01_03.png" width="315" height="133"><br>
  Таблица 3<br>
  <img src="img/file_01_04.png" width="318" height="169"><br>
  Таблица 4<br>
  <img src="img/file_01_05.png" width="154" height="316"><br>
  Рис. 2. Окно создания узлов дерева<br>
  <img src="img/file_01_06.png" width="476" height="343"><br>
  Рис. 3. Дерево принятия решений<br>
  Нажав кнопку NEW и введя название новою дерева, разработчик получает доступ 
  к окну Правило.<br>
  Чтобы создать новый узел, надо дважды щелкнуть на узле красного цвета с надписью 
  Double Click to Add Factor(Дважды щелкнуть для добавления фактора). Появляется 
  окно Add Factor (Добавление фактора) (рис. 2).<br>
  В данном окне имеются две основные области: Add IF Factor содержит кнопки, 
  позволяющие добавлять в дерево узлы ветвления; Add ТНЕN содержит кнопки, позволяющие 
  добавлять в дерево узлы заключений.<br>
  Дерево решений строится соответственно логике принятия решения, применяемой 
  экспертом на практике. Внешний вид такого дерева представлен на рис. 3.<br>
  Построив таким образом дерево решений, разработчик получает базу знаний, проверить 
  которую можно при помощи Эксперта (EXPERT).<br>
  Действия, выполняемые кнопками во вкладке EXPERT, приведены в табл. 4.</p>
<p align="justify">&nbsp;</p>
<blockquote> 
  <blockquote>
    <p align="justify"><strong><font size="4"><em>Создание простой экспертной 
      системы</em></font></strong></p>
  </blockquote>
</blockquote>
<p align="justify"><br>
  Рассмотрим задачу, иллюстрирующую основные принципы разработки ЭС. Создадим 
  систему, которая будет помогать студенту (или изучающему русский язык иностранцу) 
  правильно писать такие слова, как КАСАТЬСЯ и КОСНУТЬСЯ, БЛЕСТЕТЬ и БЛИСТАТЬ 
  и т. п., где мы имеем дело с чередованием гласных «А» и «О» или «Е» и «И» в 
  корнях слов . Назовем эту ЭС «Правило».<br>
  Представим знания эксперта, в качестве которого будет выступать учебник русского 
  языка, в виде системы правил и набора фактов, на основании которых будет выбираться 
  тот или иной вариант решения проблемы.<br>
  Вот что сказано в учебнике русского языка:<br>
  <em>1. В корнях -БЕР-/-БИР-, -ДЕР-/-ДИР-, -МЕР-/-МИР-, -ПЕР-/ -ПИР-, -БЛЕСТ-/-БЛИСТ-, 
  -ЖЕГ-/-ЖИГ-, -СТЕЛ-/-СТИЛ-, -ЧЕТ-/ -ЧИТ- пишется И, если за корнем следует суффикс 
  -А-. В других случаях пишется Е. Исключения: СОЧЕТАТЬ, СОЧЕТАНИЕ, ЧЕТА.<br>
  2. В корнях -ГАР-/-ГОР- под ударением пишется А, без ударения — О. Исключение: 
  ПРИГАРЬ.<br>
  3. В корнях -ЗАР-/-ЗОР- под ударением пишется та буква, которая слышится, без 
  ударения — буква А; Исключения: ЗОРЯНКА, ЗОРЕВАТЬ.<br>
  4. В корнях -КАС-/-КОС- пишется А, если за корнем следует суффикс -А-. В других 
  случаях пишется О.<br>
  5. В корнях -ЛАГ-/-ЛОЖ- перед Г пишется А, перед Ж — О.<br>
  6. В корнях -РАСТ-/-РАЩ-/-РОСТ- д пишется перед СТ и Щ. Исключения: РОСТОК, 
  РОСТОВЩИК, ОТРАСЛЬ.<br>
  7. В корнях -МАК-/-МОК- в значении «погружать во что-то» пишется А, в значении 
  «пропускать влагу» — О.<br>
  8. В корнях -КЛАН-/-КЛОН- пол ударением пишется та буква, которая слышится, 
  без ударения — О.<br>
  9. В корнях -ТВАР-/-ТВОР- под ударением пишется та буква, которая слышится, 
  без ударения — буква О. Исключение: УТВАРЬ.</em><br>
  Это и есть те знания, которыми должна обладать экспертная система по интересующему 
  нас вопросу.<br>
  Для создания ЭС нужно подготовить вопросы, которые система будет задавать пользователю, 
  и варианты ответов. Кроме того, установить порядок следования вопросов, т. е. 
  определить ход рассуждений эксперта. А также перечислить варианты решений, которые 
  ЭС предлагает пользователю.<br>
  Для данного примера варианты решений перечислить нетрудно:<br>
  <em>1)ответ ясен из вопроса (этот вариант предусмотрен для удобства, он позволяет 
  объединить вес исключения в одном вопросе);<br>
  2) пишется так, как слышится (правила 3, 8, 9);<br>
  3) пишется И или А (их целесообразно объединить);<br>
  4) пишется Е или О;<br>
  5) пишется О;<br>
  6) пишется А.</em><br>
  Сформулируем вопросы, которые будет задавать система.<br>
  <em>1. К какой группе относится корень слова?<br>
  Варианты ответов: 1.1. -БЕР-/-БИР-, -ДЕР-/-ДИР-, -МЕР-/-МИР-, -ПЕР-/-ПИР-, -БЛЕСТ-/-БЛИСТ-, 
  -ЖЕГ-/-ЖИГ-, -СТЕЛ-/-СТИЛ-. -ЧЕТ-/-ЧИТ-, -КАС-/-КОС-; 1.2. -ГАР-/-ГОР-, -КЛАН-/-КЛОН-, 
  -ТВОР-/-ТВАР-; 1.3. -ЗАР-/-ЗОР-; 1.4. -ЛАГ-/-ЛОЖ-; 1.5. -РАСТ-/ -РАШ-/-РОС-; 
  1.6. -МАК-/-МОК.<br>
  2. Гласная в корне ударная или безударная? Варианты ответов: 2.1. ударная; 2.2. 
  безударная.<br>
  3. Является ли слово одним из слов-исключений: СОЧЕТАТЬ, СОЧЕТАНИЕ, ЧЕТА, ПРИГАРЬ, 
  ЗОРЯНКА, ЗОРЕВАТЬ, РОСТОК, РОСТОВЩИК, ОТРАСЛЬ, УТВАРЬ?<br>
  Варианты ответов: 3.1. да; 3.2. нет.<br>
  4. Следует ли за корнем суффикс -А-? Варианты ответов: 4.1. да; 4.2. нет.<br>
  5. Корень оканчивается на -Г- или на -Ж-? Варианты ответов: 5.1. на -Г-; 5.2. 
  на -Ж-.<br>
  6. Корень оканчивается на -СТ-, на -Щ- или на -С-? Варианты ответов: 6.1. на 
  -СТ-; 6.2. на -Щ-; 6.3. на -С-.<br>
  7. Что означает слово?</em><br>
  Варианты ответов: 7.1. погружать во что-то (обмакнуть в сметану); 7.2. пропускать 
  влагу (ноги промокают).<br>
  Наконец, представим ход рассуждений при выборе правильного варианта написания 
  гласной буквы в корне слова в виде дерева решений (рис. 4).<br>
  Введя факторы (вопросы и ответы), заключения, а также построив дерево принятия 
  решений, получим следующее. На рис. 5 показана вкладка заключений (Choice), 
  на рис. 6 —вкладка факторов (Factor), где вводятся вопросы, на рис. 7 —окно 
  Add/Edit Qualifier, где вводятся ответы на вопрос, и на рис. 8 —вкладка дерева 
  принятия решений (Trees).<br>
  <img src="img/file_01_07.png" width="546" height="739"><br>
  Рис. 4. Дерево принятия решений в ЭС «Правило»<br>
  <img src="img/file_01_08.png" width="435" height="288"><br>
  Рис. 5. Вкладка заключений (Choice) ЭС «Правило»<br>
  <img src="img/file_01_09.png" width="428" height="288"><br>
  Рис. 6. Вкладка факторов (Factor) ЭС «Правило»<br>
  <img src="img/file_01_10.png" width="410" height="318"><br>
  Рис. 7. Окно Add/Edit Qualifier ЭС «Правило»<br>
  <img src="img/file_01_11.png" width="431" height="288"><br>
  Рис. 8. Вкладка дерева принятия решений (Trees) ЭС «Правило»<br>
  <img src="img/file_01_12.png" width="308" height="176"><br>
  Рис. 9. Окно первого вопроса. Выбран ответ «Нет»<br>
  <img src="img/file_01_13.png" width="307" height="173"><br>
  Рис. 10 Окно второго вопроса. Выбран ответ «Безударная»<br>
  <img src="img/file_01_14.png" width="309" height="211"><br>
  Рис. 11. Окно третьего вопроса. Выбран ответ 1<br>
  <img src="img/file_01_15.png" width="308" height="120"><br>
  Рис. 12. Окно четвертого вопроса. Выбран ответ «Нет»<br>
  <img src="img/file_01_16.png" width="331" height="91"><br>
  Рис. 13. Окно ответа (Result)<br>
</p>
<blockquote> 
  <blockquote>
    <p align="justify"> <font size="4"><em><strong><br>
      Работа с экспертной системой</strong></em></font></p>
  </blockquote>
</blockquote>
<p align="justify"><br>
  Рассмотрим порядок работы с созданной ЭС «Правило». Пусть представляет интерес 
  правильность написания слова БЛЕСНУТЬ.<br>
  — Выполните файл RB_DЕМО.ЕХЕ;<br>
  — командой File, Ореn откройте файл с примером PRAVILO.RВ1; <br>
  — выполните команду Options, Run и в появившемся окне щелкните по кнопке Continue;<br>
  — в окне первого вопроса (рис. 9) выберите ответ «Нет» и щелкните по кнопке 
  ОК; <br>
  — О в окне второго вопроса (рис. 10) выберите «Безударная» и щелкните по кнопке 
  ОК; <br>
  — в окне третьего вопроса (рис. 11) выберите ответ 1 и щелкните покнопке ОК;<br>
  — в окне четвертого вопроса (рис. 12) выберите ответ «Нет» и щелкните по кнопке 
  ОК;<br>
  — наконец, появляется окно ответа (рис. 13).</p>
<p align="justify">&nbsp;</p>
<blockquote> 
  <blockquote> 
    <p align="justify"> <font size="4"><em><strong>Оболочка ЭС VР-ЕХРЕRТ</strong></em></font></p>
  </blockquote>
</blockquote>
<p align="justify"><br>
  Автор этой оболочки экспертных систем Brain Sawyer — один из авторов известной 
  книги . Созданная им оболочка опубликована фирмой Рареrbаск Software Inti. и 
  до сих пор пользуется большой популярностью в учебных заведениях.<br>
  VР-ЕХРЕRТ —интеллектуальная программа, способная делать логические выводы на 
  основании знаний в конкретной предметной области. VР-ЕХРЕRТ реализует :<br>
  • механизм предоставления знаний в конкретной области и управление ими;<br>
  • механизм логического вывода на основании имеющихся в базе знаний;<br>
  • прозрачный интерфейс пользователя и т. д.<br>
  В VР-ЕХРЕRТ реализована модель представления знаний, которая основывается на 
  использовании правил (продукционная модель).<br>
  Экспертная система VР-ЕХРЕКТ состоит из множества несвязанных между собой правил 
  и множества фактов, накапливающихся по мере функционирования экспертной системы. 
  База знаний состоит из конечного набора правил </p>
<blockquote>
<blockquote> 
    <blockquote> 
      <blockquote> 
        <blockquote> 
          <blockquote> 
            <blockquote>
              <p align="justify"> <img src="img/file_01_17.png" width="117" height="37"></p>
            </blockquote>
          </blockquote>
        </blockquote>
      </blockquote>
    </blockquote>
  </blockquote>
</blockquote>
<p align="justify"> и набора фактов</p>
<blockquote>
<blockquote> 
    <blockquote> 
      <blockquote> 
        <blockquote> 
          <blockquote> 
            <blockquote> 
              <p align="justify"> <img src="img/file_01_18.png" width="118" height="23"> 
              </p>
            </blockquote>
          </blockquote>
        </blockquote>
      </blockquote>
    </blockquote>
  </blockquote>
</blockquote>
<p align="justify"> таких, что условие применимости любого из правил P_i состоит 
  в одновременном наличии фактов a_i1,…,a_in. Следовательно, любая продукция P_i 
  из П имеет вид:</p>
<blockquote> 
  <blockquote> 
    <blockquote> 
      <blockquote> 
        <blockquote> 
          <blockquote> 
            <p align="justify"> <img src="img/file_01_19.png" width="203" height="31"> 
              ,</p>
          </blockquote>
        </blockquote>
      </blockquote>
    </blockquote>
  </blockquote>
</blockquote>
<p align="justify"> где a_m — новый факт, выведенный из фактов условий.<br>
  <br>
</p>
<blockquote> 
  <table border="0" cellpadding="0" cellspacing="0">
    <tr> 
      <td><a href="main02.htm" target="_self" onClick="MM_nbGroup('down','group1','Menu','',1)" onMouseOver="MM_nbGroup('over','Menu','','',1)" onMouseOut="MM_nbGroup('out')"><img src="img/Menu.gif" alt="" name="Menu" width="73" height="22" border="0" onload=""></a></td>
      <td><a href="002.htm" target="_self" onClick="MM_nbGroup('down','group1','For','',1)" onMouseOver="MM_nbGroup('over','For','','',1)" onMouseOut="MM_nbGroup('out')"><img src="img/For.gif" alt="" name="For" width="73" height="22" border="0" onload=""></a></td>
    </tr>
  </table>
  <p align="justify">&nbsp;</p>
</blockquote>
</body>
</html>
