<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Экспертные системы. Урок №2</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.01
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && d.getElementById) x=d.getElementById(n); return x;
}

function MM_nbGroup(event, grpName) { //v6.0
  var i,img,nbArr,args=MM_nbGroup.arguments;
  if (event == "init" && args.length > 2) {
    if ((img = MM_findObj(args[2])) != null && !img.MM_init) {
      img.MM_init = true; img.MM_up = args[3]; img.MM_dn = img.src;
      if ((nbArr = document[grpName]) == null) nbArr = document[grpName] = new Array();
      nbArr[nbArr.length] = img;
      for (i=4; i < args.length-1; i+=2) if ((img = MM_findObj(args[i])) != null) {
        if (!img.MM_up) img.MM_up = img.src;
        img.src = img.MM_dn = args[i+1];
        nbArr[nbArr.length] = img;
    } }
  } else if (event == "over") {
    document.MM_nbOver = nbArr = new Array();
    for (i=1; i < args.length-1; i+=3) if ((img = MM_findObj(args[i])) != null) {
      if (!img.MM_up) img.MM_up = img.src;
      img.src = (img.MM_dn && args[i+2]) ? args[i+2] : ((args[i+1])? args[i+1] : img.MM_up);
      nbArr[nbArr.length] = img;
    }
  } else if (event == "out" ) {
    for (i=0; i < document.MM_nbOver.length; i++) {
      img = document.MM_nbOver[i]; img.src = (img.MM_dn) ? img.MM_dn : img.MM_up; }
  } else if (event == "down") {
    nbArr = document[grpName];
    if (nbArr)
      for (i=0; i < nbArr.length; i++) { img=nbArr[i]; img.src = img.MM_up; img.MM_dn = 0; }
    document[grpName] = nbArr = new Array();
    for (i=2; i < args.length-1; i+=2) if ((img = MM_findObj(args[i])) != null) {
      if (!img.MM_up) img.MM_up = img.src;
      img.src = img.MM_dn = (args[i+1])? args[i+1] : img.MM_up;
      nbArr[nbArr.length] = img;
  } }
}
//-->
</script>
</head>

<body bgcolor="#FFCC99">
<blockquote> 
  <table border="0" cellpadding="0" cellspacing="0">
    <tr> 
      <td><a href="001.htm" target="_self" onClick="MM_nbGroup('down','group1','Back','',1)" onMouseOver="MM_nbGroup('over','Back','','',1)" onMouseOut="MM_nbGroup('out')"><img src="img/Back.gif" alt="" name="Back" width="73" height="22" border="0" onload=""></a></td>
      <td><a href="main02.htm" target="_self" onClick="MM_nbGroup('down','group1','Menu','',1)" onMouseOver="MM_nbGroup('over','Menu','','',1)" onMouseOut="MM_nbGroup('out')"><img src="img/Menu.gif" alt="" name="Menu" width="73" height="22" border="0" onload=""></a></td>
    </tr>
  </table>
  
</blockquote>
<p align="center"><strong><font size="5">Определение и структура инженерии знаний</font></strong></p>
<p align="justify"><br>
  Основные трудности в разработке экспертных систем связаны с проблемой извлечения 
  и структурирования знаний. Именно эти вопросы исследует наука под названием 
  — инженерия знаний (knowledge engineering). Это достаточно молодое направление 
  искусственного интеллекта, появившееся тогда, когда практические разработчики 
  столкнулись с весьма нетривиальными проблемами трудности &quot;добычи&quot; 
  и формализации знаний. В первых книгах по искусственному интеллекту (ИИ) эти 
  факты обычно только постулировались, в дальнейшем начались серьезные исследования 
  по выявлению оптимальных стратегий выявления знаний [Boose, 1990; Wielinga, 
  Schreiber, Breuker, 1992; Tuthill, 1994; Adeli, 1994; Leondes, 2000].<br>
  <em>Определение 2.1</em><br>
  Инженерия знаний — направление исследований и разработок в области интеллектуальных 
  систем, ставящее целью разработку моделей, методов и систем для получения, структурирования 
  и формализации знаний специалистов с целью проектирования баз знаний.<br>
  Основные направления исследований инженерии знаний представлены на рис. 2.1.<br>
  Поле знаний<br>
  Данная глава целиком посвящена теоретическим проблемам инженерии знаний, другими 
  словами — проектированию баз знаний. Центральным понятием на стадиях получения 
  и структурирования является так называемое поле знаний, уже упоминавшееся в 
  разд. 1.1 </p>
<p align="justify"> <img src="img/file_02_01.png" width="533" height="326"><br>
  Рис. 2.1. Структура инженерии знаний<br>
  <em>Определение 2.2</em><br>
  Поле знаний — это условное неформальное описание основных понятий и взаимосвязей 
  между понятиями предметной области, выявленных из системы знаний эксперта, в 
  виде графа, диаграммы, таблицы или текста.<br>
  Поле знаний pz формируется на третьей стадии разработки ЭС (см. разд. 1.7.2) 
  — стадии структурирования.<br>
  Поле знаний, как первый шаг от структурирования к формализации, представляет 
  модель знаний о предметной области в том виде, в каком ее сумел выразить аналитик 
  на некотором &quot;своем&quot; языке.<br>
  Обобщенно синтаксическую структуру поля знаний можно представить как<br>
  Pz = (I, О, М),<br>
  где I — структура исходных данных, подлежащих обработке и интерпретации в экспертной 
  системе; О — структура выходных данных, т. е. результата работы системы; М— 
  операциональная модель предметной области, на основании которой происходит модификация 
  I в О.<br>
  Включение компонентов I и О в Pz обусловлено тем, что составляющие и структура 
  этих интерфейсных компонентов неявно присутствуют в модели репрезентации в памяти 
  эксперта. Операциональная модель М может быть представлена как совокупность 
  концептуальной структуры Sk, отражающей понятийную структуру предметной области, 
  и функциональной структуры Sf, моделирующей схему рассуждений эксперта.<br>
  M=(Sk,Sf).</p>
<p align="justify">sk выступает как статическая, неизменная составляющая pz, в 
  то время как Sf представляет динамическую, изменяемую составляющую.<br>
  Формирование Sk основано на выявлении понятийной структуры предметной области. 
  Далее описан достаточно универсальный алгоритм проведения концептуального анализа 
  на основе модификации парадигмы структурного анализа [Yourdon, 1989] и построения 
  иерархии понятий (так называемая &quot;пирамида знаний&quot;). Пример Sk и Sf 
  представлен на рис. 2.2 и 2.3.</p>
<p align="justify"><img src="img/file_02_02.png" width="557" height="401"><br>
  <br>
  <img src="img/file_02_03.png" width="473" height="198"> </p>
<p align="justify"><br>
  В последние годы концептуальную структуру называют онтологией предметной области 
  [Gruber, 1993], она включает упорядоченные понятия предметной области (ПО) 
  А и моделирует основные функциональные связи RA или отношения между понятиями, 
  образующими Sk. Помимо онтологии понимание задачи отражает модель или стратегия 
  принятия решения Sf в выбранной ПО. Таким образом, Sf образует стратегическую 
  составляющую М, часто она имеет форму простой таблицы решений, как на рис. 2.4.<br>
  Схему, отображающую отношения между реальной действительностью и полем знаний, 
  можно представить так, как показано на рис. 2.4.<br>
  <img src="img/file_02_04.png" width="458" height="235"><br>
  Рис. 2.4. &quot;Испорченный телефон&quot; при формировании поля знаний<br>
  Как следует из рисунка, поле Pzgij — это результат, полученный &quot;после 4-й 
  трансляции&quot; (если говорить на языке информатики).<br>
  1-я трансляция (Ii) — это восприятие и интерпретация действительности О предметной 
  области g i-м экспертом. В результате Ii в памяти эксперта образуется модель 
  Mgi как семантическая репрезентация действительности и его личного опыта по 
  работе с ней.<br>
  2-я трансляция (Vi,} — это вербализация опыта i-го эксперта, когда он пытается 
  объяснить свои рассуждения Si и передать свои знания Zi, инженеру по знаниям. 
  В результате Vi, образуется либо текст Ti, либо речевое сообщение Сi<br>
  3-я трансляция (Ij) — это восприятие и интерпретация сообщений Ti или Сi j-м 
  инженером по знаниям. В результате в памяти инженера по знаниям образуется модель 
  мира Mgj.<br>
  4-я трансляция (Kj) — это кодирование и вербализация модели Mgj в форме поля 
  знаний Pzgij.<br>
  Более всего эта схема напоминает детскую игру в &quot;испорченный телефон&quot;; 
  перед инженером по знаниям стоит труднейшая задача — добиться максимального 
  соответствия Mgi и Pzgij К сожалению, Pzg не является отражением действительности 
  Og, т. к. знания — вещь сугубо авторизованная, субъективная. Так следовало 
  бы на каждой ЭС ставить четкий ярлык i — j, т. е. &quot;база знаний эксперта 
  i в понимании инженера по знаниям j&quot;. Стоит заменить, например, инженера 
  по знаниям Петрова на Сидорова, и получится совсем другая картина.<br>
  Приведем пример влияния субъективных взглядов эксперта на Mgi и Vi. Реальность 
  (Og): два человека прибегают на вокзал за 2 минуты до отхода поезда. В кассы 
  — очередь. В автоматических кассах свободно, но ни у того, ни у другого нет 
  мелочи. Следующий поезд через 40 минут. Оба опаздывают на важную встречу.<br>
  – Интерпретация 1-го эксперта (I1): нельзя приходить на вокзал менее чем за 
  10 минут.<br>
  – Интерпретация 2-го эксперта (I2): надо всегда иметь мелочь в кармане.<br>
  – Вербализация 1-го эксперта (V1): опоздал к нужному поезду, т. к. не рассчитал 
  время.<br>
  – Вербализация 2-го эксперта (V2): опоздал, т. к. на вокзале неразбериха, в 
  кассах толпа.<br>
  Последующие трансляции еще больше будут искажать и видоизменять модель, но теперь 
  уже с учетом субъективного восприятия инженеров по знаниям.<br>
  Таким образом, если считать поле знаний смысловой (семантической) моделью предметной 
  области, то эта модель дважды субъективна. И если модель Mgi (см. рис. 2.4) 
  — это усеченное отображение Og, то само pz — лишь отблеск Mgi через призму Vi 
  и Mgj.<br>
  &quot;Пирамида&quot; знаний<br>
  Иерархичность понятийной структуры сознания подчеркивается в работах многих 
  психологов [Брунер, 1971; Веккер, 1976]. Поле знаний можно стратифицировать, 
  т. е. рассматривать на различных уровнях абстракции понятий. В &quot;пирамиде 
  знаний&quot; каждый следующий уровень служит для восхождения на новую ступень 
  обобщения и углубления знаний в предметной области. Таким образом, возможно 
  наличие нескольких уровней понятийной структуры Sk<br>
  Представляется целесообразным связать это с глубиной профессионального опыта 
  (например, как в системе АВТАНТЕСТ [Гаврилова, Червинская,1992]) или с уровнем 
  иерархии в структурной лестнице организации (рис. 2.5).<br>
  <img src="img/file_02_05_1.png" width="182" height="211"> <img src="img/file_02_05_2.png" width="173" height="211"> 
  <br>
  Рис. 2.5. Пирамиды знаний<br>
  Естественно, что и стратегии принятия решений, т. е. функциональные структуры 
  Sf на различных уровнях, будут существенно отличаться.<br>
  Стратегии получения знаний<br>
  При формировании поля знаний ключевым вопросом является сам процесс получения 
  знаний, когда происходит перенос компетентности экспертов на инженеров по знаниям. 
  Для названия этого процесса в литературе по ЭС получили распространение несколько 
  терминов: приобретение, добыча, извлечение, получение, выявление, формирование 
  знаний. В англоязычной специальной литературе в основном используются два термина: 
  acquisition (приобретение) и elicitation (выявление, извлечение, установление).<br>
  Термин &quot;приобретение&quot; трактуется либо очень широко — тогда он включает 
  весь процесс передачи знаний от эксперта к базе знаний ЭС, либо уже как способ 
  автоматизированного построения базы знаний посредством диалога эксперта и специальной 
  программы (при этом структура поля знаний заранее закладывается в программу). 
  В обоих случаях термин &quot;приобретение&quot; не касается самого таинства 
  экстрагирования структуры знаний из потока информации о предметной области. 
  Этот процесс описывается понятием &quot;извлечение &quot;.<br>
  Авторы склонны использовать этот термин как более емкий и более точно выражающий 
  смысл процедуры переноса компетентности эксперта через инженера по знаниям в 
  базу знаний ЭС.<br>
  <em>Определение 2.3</em><br>
  Извлечение знаний (knowledge elicitation) — это процесс взаимодействия аналитика 
  с источником знаний, в результате которого становится явным процесс рассуждений 
  специалиста при принятии решения и структура его представлений о предметной 
  области.<br>
  Во все времена большинство разработчиков ЭС отмечало, что процесс извлечения 
  знаний остается самым &quot;узким&quot; местом при построении промышленных ЭС. 
  При этом им приходится практически самостоятельно разрабатывать методы извлечения, 
  сталкиваясь со следующими трудностями [Gaines, 1989]:<br>
  – организационные неувязки;<br>
  – неудачный метод извлечения, не совпадающий со структурой знаний в данной области;<br>
  – неадекватная модель (язык) для представления знаний. <br>
  Можно добавить к этому [Гаврилова, Червинская, 1992]: <br>
  – неумение наладить контакт с экспертом;<br>
  – терминологический разнобой;<br>
  – отсутствие целостной системы знаний в результате извлечения только &quot;фрагментов&quot;;<br>
  – упрощение &quot;картины мира&quot; эксперта и др.<br>
  Процесс извлечения знаний — это длительная и трудоемкая процедура, в которой 
  инженеру по знаниям, вооруженному специальными знаниями по когнитивной психологии, 
  системному анализу, математической логике и пр., необходимо воссоздать модель 
  предметной области, которой пользуются эксперты для принятия решения. Часто 
  начинающие разработчики ЭС, желая упростить эту процедуру, пытаются подменить 
  инженера по знаниям самим экспертом. По многим причинам это нежелательно.<br>
  Во-первых, большая часть знаний эксперта — это результат многочисленных наслоений, 
  ступеней опыта. И часто зная, что из А следует В, эксперт не отдает себе отчета, 
  что цепочка его рассуждений была гораздо длиннее, например А -&gt; D -&gt; С 
  -&gt; В, или А -&gt; Q -&gt; R -&gt; В.<br>
  Во-вторых, как было известно еще Платону, мышление диалогично. И поэтому диалог 
  инженера по знаниям и эксперта — наиболее естественная форма изучения лабиринтов 
  памяти эксперта, в которых хранятся знания, частью носящие невербальный характер, 
  т. е. выраженные не в форме слов, а в форме наглядных образов, например. И именно 
  в процессе объяснения инженеру по знаниям эксперт на эти размытые ассоциативные 
  образы надевает четкие словесные ярлыки, т. е. вербализует знания.<br>
  В третьих, эксперту труднее создать модель предметной области вследствие глубины 
  и объема информации, которой он владеет. Еще в ситуационном управлении [Поспелов, 
  1986] было выявлено, что объекты реального мира связаны более чем 200 типами 
  отношений (временные, пространственные, причинноследственные, типа &quot;часть-целое&quot; 
  и др.). Эти отношения и связи предметной области образуют сложную систему, из 
  которой выделить &quot;скелет&quot; или главную структуру иногда доступнее аналитику, 
  владеющему к тому же системной методологией.<br>
  Термин &quot;приобретение&quot; в рамках данной книги оставлен за автоматизированными 
  системами прямого общения с экспертом. Они действительно непосредственно приобретают 
  уже готовые фрагменты знаний в соответствии со структурами, заложенными разработчиками 
  систем. Большинство этих инструментальных средств специально ориентировано на 
  конкретные ЭС с жестко обозначенной предметной областью и моделью представления 
  знаний, т. е. не являются универсальными.<br>
  <em>Определение 2.4</em><br>
  Приобретение знаний (knowledge acquisition) — процесс заполнения базы знаний 
  экспертом с использованием специализированных программных средств.<br>
  Например, система TEIRESIAS [Davis, 1982], ставшая прародительницей всех инструментариев 
  для приобретения знаний, предназначена для пополнения базы знаний системы MYCIN 
  или ее дочерних ветвей, построенных на &quot;оболочке&quot; EMYCIN [Shortliffe 
  et al, 1979] в области медицинской диагностики с использованием продукционной 
  модели представления знаний.<br>
  Термин формирование знаний (machine learning) традиционно закрепился за чрезвычайно 
  перспективной и активно развивающейся областью инженерии знаний, которая занимается 
  разработкой моделей, методов и алгоритмов обучения. Она включает индуктивные 
  модели формирования знаний и автоматического порождения гипотез, например ДСМ-метод 
  [Финн, 2000], на основе обучающих выборок, обучение по аналогии и другие методы. 
  Эти модели позволяют выявить причинноследственные эмпирические зависимости в 
  базах данных с неполной информацией, содержащих структурированные числовые и 
  символьные объекты (часто в условиях неполноты информации).<br>
  <em>Определение 2.5</em><br>
  Формирование знаний (machine learning) — процесс анализа данных и выявления 
  скрытых закономерностей с использованием специального математического аппарата 
  и программных средств.<br>
  Традиционно к задачам формирования знаний или машинного обучения относятся задачи 
  прогнозирования, идентификации (синтеза) функций, расшифровки языков, индуктивного 
  вывода и синтеза с дополнительной информацией [Епифанов, 1984]. В широком смысле 
  к обучению по примерам можно отнести и методы обучения распознаванию образов 
  [Аткинсон, 1989; Schwartz, 1988].<br>
  Для того чтобы эти методы стали элементами технологии интеллектуальных систем, 
  необходимо решить ряд задач [Осипов, 1997]:<br>
  – обеспечить механизм сопряжения независимо созданных баз данных, имеющих различные 
  схемы, с базами знаний интеллектуальных систем;<br>
  – установить соответствие между набором полей базы данных и множеством элементов 
  декларативного компонента базы знаний;<br>
  – выполнить преобразование результата работы алгоритма обучения в способ представления, 
  поддерживаемый программными средствами интеллектуальной системы.<br>
  Помимо перечисленных существуют также и другие стратегии получения знаний, например, 
  в случае обучения на примерах (case-based reasoning), когда источник знаний 
  — это множество примеров предметной области [Осипов, 1997; Попов, Фоминых, Кисель, 
  1996]. Обучение на основе примеров (прецедентов) включает настройку алгоритма 
  распознавания на задачу посредством предъявления примеров, классификация которых 
  известна.<br>
  Обучение на примерах тесно связано с машинным обучением. Различие заключается 
  в том, что результат обучения в рассматриваемом здесь случае должен быть интерпретирован 
  в некоторой модели, в которой, возможно, уже содержатся факты и закономерности 
  предметной области, и преобразован в способ представления, который допускает 
  использование результата обучения в базе знаний, для моделирования рассуждений, 
  для работы механизма объяснения и т. д., т. е. делает результат обучения элементом 
  соответствующей технологии.<br>
  Например, в системе INDUCE [Коов и др., 1988] порождается непротиворечивое описание 
  некоторого класса объектов по множествам примеров и контрпримеров данного класса. 
  В качестве языка представления используется язык переменнозначной логики первого 
  порядка (вариант языка многозначной логики первого порядка).<br>
  В последнее время широкое распространение получили термины data mining и knowledge 
  discovery, означающие, по сути, тот же процесс формирования знаний и поиск закономерностей, 
  осуществляемый на больших выборках данных, обычно находящихся в хранилищах данных 
  (data warehouse).<br>
  Таким образом, можно выделить три основных стратегии проведения стадии получения 
  знаний при разработке ЭС (рис. 2.6):<br>
  – с использованием ЭВМ при наличии подходящего программного инструментария 
  — приобретение знаний',<br>
  – с использованием программ обучения при наличии репрезентативной (т. е. достаточно 
  представительной) выборки примеров принятия решений в предметной области и соответствующих 
  пакетов прикладных программ — формирование знаний;<br>
  – без использования вычислительной техники путем непосредственного контакта 
  инженера по знаниям и источника знаний (будь то эксперт, специальная литература 
  или другие источники) — извлечение знаний.</p>
<p align="justify"> <img src="img/file_02_06.png" width="370" height="143"><br>
  Рис. 2.6. Стратегии получения знаний<br>
  Далее в этой главе подробно будут рассматриваться процессы извлечения знаний, 
  т. к. на современном этапе разработки ЭС эти стратегии являются наиболее эффективными 
  и перспективными. Формирование знаний, тяготеющее в большей степени к области 
  machine learning, т. е. индуктивному обучению, основываясь на хорошо исследованном 
  аппарате распознавания образов [Гаек, Гавранек, 1983] и обнаружения сходства 
  объектов [Гусакова, Финн, 1987], выходит за рамки данной книги. Также за рамками 
  книги остались вопросы приобретения знаний [Осипов, 1997] и формирования знаний 
  из данных (data mining, knowledge discovery) и др.</p>
<div align="justify"> 
  <p>&nbsp;</p>
</div>
<blockquote>
  <div align="justify">
    <div align="justify">
      <table border="0" cellpadding="0" cellspacing="0">
        <tr> 
          <td><a href="001.htm" target="_self" onClick="MM_nbGroup('down','group1','Back','',1)" onMouseOver="MM_nbGroup('over','Back','','',1)" onMouseOut="MM_nbGroup('out')"><img src="img/Back.gif" alt="" name="Back" width="73" height="22" border="0" onload=""></a></td>
          <td><a href="main02.htm" target="_self" onClick="MM_nbGroup('down','group1','Menu','',1)" onMouseOver="MM_nbGroup('over','Menu','','',1)" onMouseOut="MM_nbGroup('out')"><img src="img/Menu.gif" alt="" name="Menu" width="73" height="22" border="0" onload=""></a></td>
        </tr>
      </table>
    </div>
    <p align="justify"></p>
</div>
</blockquote>
</body>
</html>
